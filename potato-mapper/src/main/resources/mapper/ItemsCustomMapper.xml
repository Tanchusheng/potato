<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kt.mapper.ItemsCustomMapper">

    <select id="queryItemComments" parameterType="hashmap" resultType="com.kt.vo.ItemCommentVO">
        select
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickName as nickname
        from
        items_comments ic
        left join users u on ic.user_id = u.id
        where ic.item_id = #{itemId}
        <if test="commentLevel != null and commentLevel != '' ">
            and ic.comment_level = #{commentLevel}
        </if>
    </select>

    <select id="searchItems" parameterType="hashmap" resultType="com.kt.vo.SearchItemsVO">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        tempSpec.price_discount AS price
        FROM
            items i
            LEFT JOIN items_img ii ON i.id = ii.item_id
            LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) tempSpec ON i.id = tempSpec.item_id
        WHERE
	    ii.is_main = 1
	    <if test="itemName != null and itemName != ''">
            and i.item_name like '%${itemName}%'
        </if>
        order by
        <choose>
            <when test="sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    <!-- k 默认，代表默认排序 ，根据name
             c 根据销量排序
             p 根据价格排序-->
    <select id="searchItemsByThirdCat" parameterType="hashmap" resultType="com.kt.vo.SearchItemsVO">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        tempSpec.price_discount AS price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN ( SELECT item_id, MIN( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) tempSpec ON i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        and
        i.cat_id = #{catId}
        order by
        <choose>
            <when test="sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="list" resultType="com.kt.vo.ShopcartVO">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            ii.url AS itemImgUrl,
            sp.id AS specId,
            sp.`name` AS specName,
            sp.price_discount AS priceDiscount,
            sp.price_normal AS priceNormal
        FROM
            items_spec sp
            LEFT JOIN items i ON i.id = sp.item_id
            LEFT JOIN items_img ii ON ii.item_id = i.id
        WHERE
            ii.is_main = 1
            AND sp.id IN
            <foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
                #{specId}
            </foreach>
    </select>

    <update id="decreaseItemSpecStock" >
        update items_spec
        set stock = stock - #{pendingCounts}
        where id = #{specId}
        and stock >= #{pendingCounts}
    </update>
</mapper>